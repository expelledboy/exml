name: Elixir CI

env:
  MIX_ENV: test
  HEX_HOME: $PWD/_build/hex
  MIX_HOME: $PWD/_build/mix
  REBAR_GLOBAL_CONFIG_DIR: $PWD/_build/rebar3
  REBAR_CACHE_DIR: $PWD/_build/rebar3.cache

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: cachix/install-nix-action@v13
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Setup nix shell
        # TODO could be cached, but takes ~30 secs
        run: nix-shell --run 'elixir --eval "IO.puts System.version()"'

      - name: Cache build
        uses: actions/cache@v2.1.5
        id: build-cache
        with:
          path: deps _build
          key: ${{ runner.os }}-mix-test3-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install dependencies
        run: nix-shell --run 'make update-dep-repos deps'

      - name: Check code
        run: nix-shell --run 'make lint'

      - name: Run unit tests
        run: nix-shell --run 'make test'

      - name: Cache PLTs
        uses: actions/cache@v2
        id: plt-cache
        with:
          path: priv/plts
          key: ${{ runner.os }}-plts-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}

      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: nix-shell --run 'make priv/plts/dialyzer.plt'

      - name: Run dialyzer
        run: nix-shell --run 'make dialyzer'

      - name: Generate docs
        run: nix-shell --run 'mix docs'

      - name: Save build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: doc-cover
          path: |
            doc
            cover
